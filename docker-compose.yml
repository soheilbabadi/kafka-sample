version: '3.8'


services:
  db:
    image: postgres:13
    restart: always
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: kafka
    ports:
      - '5432:5432'


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  mongo:
    image: mongo:4.4.18
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: kafka
    ports:
      - '27017:27017'

  kafka_producer:
    image: kafka_producer:demo
    container_name: kafka_producer
    build: './producer/.'
    tty: true
    ports:
      - '8081:8081'
    depends_on:
      - db
      - zookeeper
      - kafka
      - mongo
    environment:
      - "BUILDKIT_STEP_LOG_MAX_SIZE=1073741824"
      - "SPRING_PROFILES_ACTIVE:prod"
    logging:
      options:
        max-size: "1073741824"
        max-file: "1000"

  kafka_consumer:
    image: kafka_consumer:demo
    container_name: kafka_consumer
    build: './consumer/.'
    tty: true
    ports:
      - '8082:8082'
    depends_on:
      - db
      - zookeeper
      - kafka
      - mongo
    environment:
      - "BUILDKIT_STEP_LOG_MAX_SIZE=1073741824"
      - "SPRING_PROFILES_ACTIVE:prod"

    logging:
      options:
        max-size: "1073741824"
        max-file: "1000"

#docker network create kafka-network